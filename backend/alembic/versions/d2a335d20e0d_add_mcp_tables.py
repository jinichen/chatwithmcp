"""Add MCP tables

Revision ID: d2a335d20e0d
Revises: 900dc7eb58fc
Create Date: 2025-03-01 19:36:55.899017

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd2a335d20e0d'
down_revision: Union[str, None] = '900dc7eb58fc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_mcps_id', table_name='user_mcps')
    op.drop_table('user_mcps')
    op.drop_index('ix_registered_mcps_id', table_name='registered_mcps')
    op.drop_index('ix_registered_mcps_name', table_name='registered_mcps')
    op.drop_table('registered_mcps')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('registered_mcps',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('registered_mcps_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('api_endpoint', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('models_supported', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('provider_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), server_default=sa.text("'active'::character varying"), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='registered_mcps_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_registered_mcps_name', 'registered_mcps', ['name'], unique=True)
    op.create_index('ix_registered_mcps_id', 'registered_mcps', ['id'], unique=False)
    op.create_table('user_mcps',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('mcp_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('installation_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('usage_metrics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['mcp_id'], ['registered_mcps.id'], name='user_mcps_mcp_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_mcps_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_mcps_pkey'),
    sa.UniqueConstraint('user_id', 'mcp_id', name='uix_user_mcp')
    )
    op.create_index('ix_user_mcps_id', 'user_mcps', ['id'], unique=False)
    # ### end Alembic commands ###
